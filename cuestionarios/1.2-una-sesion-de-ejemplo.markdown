
## Marque todas las que considere correctas:

[x] Las asignaciones son expresiones, pero no toda expresión es una asignación.  
[ ] Cuando ocurre una asignación en un comando, no se debe llamar expresión.  
[x] A diferencia de otros lenguajes, en R no es necesario indicar con punto y coma el final de cada comando.  
[x] El punto y coma es necesario para separar dos comandos en una misma línea.   
[ ] El uso del punto y coma es muy útil para ahorrar espacios en los scripts y por lo tanto es una opción que se recomienda usar con frecuencia.

____

## Marque todos los comandos con sintaxis correcta:

[ ] `ls`  
[x] `ls()`  
[x] `rm("x")`  
[x] `rm(x)`  
[ ] `save(obj1, obj2, obj3, "archivo.RData")`  
[ ] `save(obj1, obj2, obj3, file=archivo.RData)`  
[x] `save(obj1, obj2, obj3, file="archivo.RData")`  

____

## Marque la opción correcta:

[ ] El comando `c(margen, nproc)` puesto sobre el final de la función `prp` sirve para imprimir en la consola los valores `margen` y `nproc`.  

[x] El comando `c(margen, nproc)` puesto sobre el final de la función `prp` sirve para concatenar los valores `margen` y `nproc` para formar un vector de largo = 2.

____

## Para el caso del ejemplo de la lección, la función `prp` resulta práctica debido a que (marque las correctas):

[x] Evita ir continuamente del script a la consola y de la consola al script.  
[ ] Minimiza el tamaño de los scripts utilizados y por lo tanto mantiene más organizado y legible el código.  
[x] Permite probar muchas opciones de forma rápida, al ser usada en combinación con un loop del tipo `for`.  
[ ] Mantiene nuestra área de trabajo más limpia al evitar crear muchos objetos en la sesión (como las variables, i.e. `ntecnicos`, `nsalidas`, etc).
